[package]
name = "gui"
version = "0.1.0"
edition = "2021"
rust-version = "1.65"


[dependencies]
chip8 = { path = "../chip8" }
egui = { version = "0.21.0", features = ["serde"] }
eframe = { version = "0.21.0", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }

serde = { version = "1", features = ["derive"] }
serde_json = "1.0"

once_cell = "1.10.0" # for rust-i18n
rust-i18n = "1.1.1"

[package.metadata.i18n]
# The available locales for your application, default: ["en"].
available-locales = ["en"]

# The default locale, default: "en".
default-locale = "en"

# Path for your translations YAML file, default: "locales".
# This config for let `cargo i18n` command line tool know where to find your translations.
# You must keep this path is same as the path you pass to `rust_i18n::i18n!` method.
load-path = "locales"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing-subscriber = "0.3"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"


[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
